openapi: 3.0.1
info:
  title: defaultTitle
  description: defaultDescription
  version: '0.2'
servers:
  - url: http://localhost:8082
paths:
  /store/all-store:
    get:
      description: Auto generated using Swagger Inspector
      responses:
        '200':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreModel'
      servers:
        - url: http://localhost:8082
  /store/get-store-by-userName:
    get:
      description: Auto generated using Swagger Inspector
      parameters:
        - name: password
          in: query
          schema:
            type: string
          example: '123456'
        - name: userName
          in: query
          schema:
            type: string
          example: huynq
      responses:
        '200':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreModel'
        '404':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                  error:
                    type: string
                  message:
                    type: string
                  timestamp:
                    type: string
                  status:
                    type: integer
              examples:
                '0':
                  value: >-
                    {"timestamp":"2022-06-30T08:41:19.936+00:00","status":404,"error":"Not
                    Found","message":"No message
                    available","path":"/store/get-store-by-userName"}
      servers:
        - url: http://localhost:8082
    post:
      description: Auto generated using Swagger Inspector
      parameters:
        - name: password
          in: query
          schema:
            type: string
          example: '123456'
        - name: userName
          in: query
          schema:
            type: string
          example: huynq
      responses:
        '200':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreModel'
        '404':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                  error:
                    type: string
                  message:
                    type: string
                  timestamp:
                    type: string
                  status:
                    type: integer
              examples:
                '0':
                  value: >-
                    {"timestamp":"2022-06-30T08:42:16.535+00:00","status":404,"error":"Not
                    Found","message":"No message
                    available","path":"/store/get-store-by-userName"}
      servers:
        - url: http://localhost:8082
    servers:
      - url: http://localhost:8082
  /store/get-store-by-id:
    get:
      description: Auto generated using Swagger Inspector
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        '200':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreModel'
        '404':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                  error:
                    type: string
                  message:
                    type: string
                  timestamp:
                    type: string
                  status:
                    type: integer
              examples:
                '0':
                  value: >-
                    {"timestamp":"2022-06-30T08:40:33.497+00:00","status":404,"error":"Not
                    Found","message":"No message
                    available","path":"/store/get-store-by-id"}
      servers:
        - url: http://localhost:8082
  /store/save:
    post:
      description: Auto generated using Swagger Inspector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreModel'
            examples:
              '0':
                value: "\r\n    {\r\n        \"id\": 1000,\r\n        \"name\": \"NguyÅn Quang Huy\",\r\n        \"address\": \"123456\",\r\n        \"phoneNumber\": \"0123456789\",\r\n        \"email\": \"huya@gmail.com\",\r\n        \"userName\": \"100002\",\r\n        \"password\": \"$2a$10$Ox4qQSu.GUSa2p9Voqf26uhT3aGLWvvDYbQyGQXjAPQJYMnf0h8Uu\",\r\n        \"confirmPassword\": null\r\n    }"
              '1':
                value: "\r\n    {\r\n        \"id\": 1000,\r\n        \"name\": \"NguyÅn Quang Huy\",\r\n        \"address\": \"123456\",\r\n        \"phoneNumber\": \"0123456789\",\r\n        \"email\": \"huya@gmail.com\",\r\n        \"userName\": \"100001\",\r\n        \"password\": \"$2a$10$Ox4qQSu.GUSa2p9Voqf26uhT3aGLWvvDYbQyGQXjAPQJYMnf0h8Uu\",\r\n        \"confirmPassword\": null\r\n    }"
      responses:
        '200':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
              examples:
                '0':
                  value: '{"status":"OK","message":"Created"}'
        '400':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
              examples:
                '0':
                  value: '{"status":"False","message":"Username available"}'
      servers:
        - url: http://localhost:8082
  /store/update:
    put:
      description: Auto generated using Swagger Inspector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreModel'
            examples:
              '0':
                value: "{\r\n        \"id\": 12,\r\n        \"name\": \"NguyÅn Quang Huy Updated Test\",\r\n        \"address\": \"123456\",\r\n        \"phoneNumber\": \"0123456789\",\r\n        \"email\": \"huya@gmail.com\",\r\n        \"userName\": \"huynew123\",\r\n        \"password\": \"1234567\",\r\n        \"confirmPassword\": \"1234567\"\r\n    }"
      responses:
        '200':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
        '400':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
              examples:
                '0':
                  value: '{"status":"False","message":"Try again!!"}'
      servers:
        - url: http://localhost:8082
  /store/delete:
    delete:
      description: Auto generated using Swagger Inspector
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int64
          example: '10000000'
      responses:
        '200':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
              examples:
                '0':
                  value: '{"status":"OK","message":"Delete Success"}'
        '404':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
              examples:
                '0':
                  value: '{"status":"Faild","message":"No store to delete."}'
      servers:
        - url: http://localhost:8082
  /store/order/save:
    post:
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
          x-example: '1'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderDetail'

      responses:
        '200':
          description: Definition generated from Swagger Inspector
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      servers:
        - url: http://localhost:8082
    servers:
      - url: http://localhost:8082
components:
  schemas:
    StoreModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        userName:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
    ResponseObject:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
    OrderDetail:
      properties:
        itemQuantity:
          type: integer
          format: int64
        itemId:
          type: integer
          format: int64
    Order:
      properties:
        id:
          type: integer
          format: int64
        totalPrice:
          type: number
          format: double
        orderDate:
          type: string
          format: date
        storeId:
          type: integer
          format: int64
        orderDetailDTOS:
          type: object



